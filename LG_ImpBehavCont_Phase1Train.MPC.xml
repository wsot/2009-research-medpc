<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet type="text/xsl" href="comments.xsl"?>
<program>
<researcher>
<name>Lisa Guccione</name>
<email>lisa_guccione@bigpond.com</email>
</researcher>
<study>Impulsive Behaviour Control</study>
<title>Training 1</title>
<history>
<revision number="1.0">
<author>Simeon Morgan &lt;smorgan@students.latrobe.edu.au&gt;</author>
<created>2008-07-08 11:33</created>
<summary>First version</summary>
</revision>
</history>
<constant group="general" represents="parameter" name="Def_MaxDuration" summary="Default maximum duration (in minutes) for program to run"></constant>
<constant group="general" represents="parameter" name="Abs_MaxTrials" summary="Limit on maximum number of trials to be recorded/processed"></constant>
<constant group="general" represents="parameter" name="Def_RewardLicks" summary="Default number of licks for a reward"></constant>
<constant group="general" represents="parameter" name="Lever_LeftLever" summary="Value used to represent left lever"></constant>
<constant group="general" represents="parameter" name="Lever_RightLever" summary="Value used to represent right lever"></constant>
<constant group="general" represents="parameter" name="Lever_CentreLever" summary="Value used to represent Centre lever"></constant>
<constant group="general" represents="parameter" name="Lights_UseHouseRear" summary="Whether to use rear house light (No=0 Yes=1)"></constant>
<constant group="general" represents="parameter" name="Lights_UseHouseMid" summary="Whether to use middle house light (No=0 Yes=1)"></constant>
<constant group="general" represents="parameter" name="Lights_UseHouseFront" summary="Whether to use front house light (No=0 Yes=1)"></constant>
<array name="C" outputName="Configuration" summary="Operational variables - should not change over the duration of the task once set">
<column name="C_MaxDuration" outputName="Max Duration" summary="Maximum time before automatic termination (minutes)"></column>
<column name="C_MaxDurationMsec" summary="Maximum time before automatic termination in msec (autogenerated)"></column>
<column name="C_RewardLicks" outputName="Reward Licks" summary="Number off licks permitted for reward"></column>
<column name="C_CamUnconnectedState" summary="Used to store 'Unconnected' StateID of camera"></column>
<column name="C_CamConnectOkState" summary="Used to store 'Ok' StateID of camera"></column>
<column name="C_CamConnectFailState" summary="Used to store 'Fail' StateID of camera"></column>
</array>
<!--<variable alias="" name="" summary=""></variable>-->
<variable alias="Maximum Duration" name="C(^C_MaxDuration)" summary="Maximum time before automatic termination"></variable>
<variable alias="Reward Licks Count" name="C(^C_RewardLicks)" summary="How many licks are permitted for reward"></variable>
<input name="Inp_HeadEntry" summary="Input ID of the head entry unit on pellet dispenser"></input>
<input name="Inp_Lickometer" summary="Input ID of the lickometer"></input>
<input name="Inp_LeverTrigger" summary="Input ID of the fixed lever 'starting' trigger"></input>
<input name="Inp_LeverInputLeft" summary="Input ID of retractable lever on the left"></input>
<input name="Inp_LeverInputRight" summary="Input ID of retractable lever on the right"></input>
<input name="Inp_UltrasonicA" summary="Input ID of ultrasonic input 1 of 2"></input>
<input name="Inp_UltrasonicB" summary="Input ID of ultrasonic input 2 of 2"></input>
<output name="Out_PelletDispenser" summary="Output ID of feeder unit."><use>Dispenses on OFF->ON transition</use></output>
<output name="Out_LiquidDispenser" summary="Output ID of drinking unit."><use>Toggle liquid availability: OFF->Unavailable, ON->Available</use></output>
<output name="Out_LeftLeverRetract" summary="Output trigger to extend/retract left lever"><use>Toggle extended state of lever; OFF->Not extended, ON->Extended</use></output>
<output name="Out_RightLeverRetract" summary="Output trigger to extend/retract right lever"><use>Toggle extended state of lever; OFF->Not extended, ON->Extended</use></output>
<output name="Out_LickShockSwitch" summary="Output ID of ENV-250A Contact Lickometer switching unit."><use>OFF->Lickometer active, ON->Floor connected to shock emitter</use></output>
<output name="Out_Ultrasonic" summary="Output ID of ultrasonic recording unit."><use>???</use></output>
<output name="Out_ShockEmitter" summary="Output ID of shock unit."><use>Toggle shock delivery: OFF->No shock presently being delivered, ON->CONTINUOUS SHOCK PRESENTLY BEING DELIVERED</use></output>
<output name="Out_HouseLightRear" summary="Output ID of rear-most house light."><use>OFF->unlit, ON->lit</use></output>
<output name="Out_HouseLightMid" summary="Output ID of miidle house light."><use>OFF->unlit, ON->lit</use></output>
<output name="Out_HouseLightFront" summary="Output ID of front-most house light."><use>OFF->unlit, ON->lit</use></output>
<output name="Out_LedRed" summary="Output ID of Red LED (rearmost)."><use>OFF->unlit, ON->lit</use></output>
<output name="Out_LedGreen" summary="Output ID of Green LED (frontmost)."><use>OFF->unlit, ON->lit</use></output>
<output name="Out_LedYellow" summary="Output ID of Yellow LED (middle)."><use>OFF->unlit, ON->lit</use></output>
<constant group="z-pulse" represents="parameter" name="ZP_ExtendSipper" summary="Trigger extend sipper; set S for max # of sips before retraction"></constant>
<constant group="z-pulse" represents="parameter" name="ZP_SipperLimitHit" summary="Triggers when the sipper limit is hit; if S less than 0 then never triggered."></constant>
<constant group="z-pulse" represents="parameter" name="ZP_RetractSipper" summary="Trigger sipper retract, regardless of whether sipper limit hit"></constant>
<constant group="z-pulse" represents="parameter" name="ZP_TerminateExperiment" summary="End the experiment - may be used if error occurrs"></constant>
<constant group="z-pulse" represents="parameter" name="ZP_HouseLightsOn" summary="Turn on house lights"></constant>
<constant group="z-pulse" represents="parameter" name="ZP_HouseLightsOff" summary="Turn off house lights"></constant>
<constant group="z-pulse" represents="parameter" name="ZP_StimLightsOn" summary="Turns on all stimulus lights"></constant>
<constant group="z-pulse" represents="parameter" name="ZP_StimLightsMid" summary="Switch on only middle stim light on"></constant>
<constant group="z-pulse" represents="parameter" name="ZP_StimLightsOff" summary="Switch off all stim lights"></constant>
<constant group="z-pulse" represents="parameter" name="ZP_ExtendLeverSingle" summary="Extend single lever determined by A(^A_CurrentLever)"></constant>
<constant group="z-pulse" represents="parameter" name="ZP_ExtendLeverAll" summary="Extend all levers"></constant>
<constant group="z-pulse" represents="parameter" name="ZP_RetractLeverAll" summary="Retract all levers"></constant>
<constant group="z-pulse" represents="parameter" name="ZP_DurationReached" summary="Trigged when experiment reaches maximum time"></constant>
<array name="A" outputName="Trials overview" summary="Trial summary data">
<column name="A_CompletedTrials" outputName="Total trials" summary="The number of trials that have already been completed"></column>
<column name="A_CurrentHours" outputName="Hours" summary="Hours since commencement (for H:M:S.MS)"></column>
<column name="A_CurrentMinutes" outputName="Minutes" summary="Minutes since commencement (for H:M:S.MS)"></column>
<column name="A_CurrentSeconds" outputName="Seconds" summary="Seconds since commencement (for H:M:S.MS)"></column>
<column name="A_CurrentMilliseconds" outputName="Seconds" summary="Milliseconds since commencement (for H:M:S.MS) "></column>
<column name="A_CurrentLever" summary="Current lever in use"></column>
</array>
<array name="B" outputName="Trials" summary="Specific trial data">
<column name="B_TrialNumber" outputName="Trial" summary="Number of this trial"></column>
<column name="B_TrialTimeHour" outputName="Hour" summary="Time post-commencement (H) this trial occurred"></column>
<column name="B_TrialTimeMinute" outputName="Minute" summary="Time post-commencement (M) this trial occurred"></column>
<column name="B_TrialTimeSecond" outputName="Second" summary="Time post-commencement (S) this trial occurred"></column>
<column name="B_TrialTimeMillisecond" outputName="Millisecond" summary="Time post-commencement (MS) this trial occurred"></column>
<column name="B_TrialMsec" outputName="Msec from start" summary="Time post-commencement (msec) this trial occurred TOTAL - Not related to H:M:S"></column>
<column name="B_ExtendedLever" outputName="Extended lever" summary="Which lever was extended (0=Left  1=Right  2=Centre)"></column>
<column name="B_LickDelay" outputName="Lick Delay" summary="Time (in msec) before lick count was reached"></column>
</array>
<constant group="general" represents="parameter" name="B_TrialIndexMultiplier" summary="Multiplier to be used for each trial"></constant>
<array name="D" summary="Which lever to extend/monitor press for each training trial">
<column name="D_LeverID" summary="ID of lever to be pressed - not used since there is only one column"></column>
</array>
<constant group="general" represents="parameter" name="D_OptionsBeforeLoop" summary="The incrementing number to be reached before the list is restarted"></constant>
<!--<variable name="" summary=""></variable>-->
<variable name="O" summary="Camera status"></variable>
<variable name="Q" summary="Current offset for B array"></variable>
<variable name="R" summary="Inter-trial pause (generated)"></variable>
<variable name="S" summary="Number of sips remaining before sipper retract - set before using ZP_ExtendSipper"></variable>
<variable name="T" summary="Timer - # of msec since commencement"></variable>
<variable name="U" summary="Timer - variable swapping 1"></variable>
<variable name="W" summary="Timer - variable swapping 2"></variable>
<variable name="X" summary="Current point in lever array"></variable>
<variable name="Y" summary="Lever cycle - temporary variable"></variable>
<stateset id="1" summary="Run the preparation and termination functions of the program">
<state id="1" summary="Set variables to default values">
</state>
<state id="5" summary="Pause until start command is issued; Update displayed variables.">
</state>
<state id="10" summary="Wait for program termination">
</state>
<state id="10" summary="Turn off all outputs, save data and end">
</state>
</stateset>
<stateset id="2" summary="Operate the experiment functionally">
<state id="1" summary="Wait for the start trigger">
</state>
<state id="3" summary="Update trial data, reset stimulus lights">
</state>
<state id="5" summary="Wait for correct lever press">
</state>
<state id="6" summary="Record press; Turn off left and right stim lights; retract all levers">
</state>
<state id="7" summary="Wait until lick count has his the value of S - i.e. ZP_SipperLimitHit">
</state>
<state id="10" summary="Wait 5 seconds before continuing">
</state>
<state id="31" summary="Check if full number of trials have been completed, and if so issue terminate command.">
</state>
</stateset>
<stateset id="3" summary="Operate the sipper">
<state id="1" summary="Wait for sipper extend (ZP_ExtendSipper) to be triggered">
</state>
<state id="3" summary="Extend sipper until ZP_RetractSipper occurs">
</state>
<state id="5" summary="Extend sipper until ZP_RetractSipper occurs or max sips hit">
</state>
</stateset>
<stateset id="5" summary="Control house light system">
<state id="1" summary="Wait for lighting change command">
</state>
</stateset>
<stateset id="6" summary="Control stimulus light system">
<state id="1" summary="Wait for lighting change command">
</state>
</stateset>
<stateset id="7" summary="Timer - counts up in msec (in steps of 10 msec)">
<state id="1" summary="Wait for start trigger">
<state id="2" summary="Increment counter, hour, minutes, seconds, milliseconds">
</state>
</state>
</stateset>
<stateset id="8" summary="Control lever extensions">
<state id="1" summary="Wait for lighting change command">
</state>
</stateset>
<stateset id="9" summary="Experiment timer - check if experiment has reached maximum duration">
<state id="1" summary="Wait for start trigger">
<state id="2" summary="Every cycle, check if max duration of experiment reached">
</state>
</state>
</stateset>
</program>
