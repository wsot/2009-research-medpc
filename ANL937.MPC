\ ANL937.mpc
\
\ This example program demonstrates how to turn on the recording
\ for the ANL-937 microphone device and how to record the responses
\ from the device.
\
\ The Array's D and F contain the absolute times from when the
\ program started that each event happened.  For example Array
\ Element D(0) contains the first absolute time that the Band 1
\ Vocal went above its Threshold value.  Array Element D(1)
\ contains the first absolute time that the Band 1 Vocal fell below
\ its Threshold value.  Array Element D(2) contains the second
\ absolute time that the Band 1 Vocal went above its Threshold
\ value.  Array Element D(3) contains the second absolute time that
\ the Band 1 Vocal fell below its Threshold value.  Etcetera.
\
\ The Variables E and G contain the total number of times that
\ each Vocal Band went above their respective Threshold values.
\
\ The Array C contains the same information as the Array's D and F
\ and the Variables E and G, but it is recorded using the SoftCR
\ data format.  SoftCR is an external program from MED-PC that can
\ graph the data contained in Array C so that it may be more easily
\ understood.  If SoftCR data is not desired, then just set the
\ value in Array Element A(2) [ A(^SoftCR) ] to 0.
\
\ SoftCR data is recorded in Relative Mode with a 10ms Resolution.
\
\ The Input and Output constants listed below should be changed to
\ match the existing hardware configuration.  The two Inputs need
\ to be in Level Mode.  Level Mode is set by selecting the
\ appropriate Jumper or Switch (depending on the Input Card
\ version) on the Input Card.


\ Inputs
^VocalBand1 = 1  \ Level Mode
^VocalBand2 = 2  \ Level Mode

\Outputs
^StartRec = 1


\ A() = Control Variables with Assigned Aliases as Defined
Var_Alias Acclimation Time (sec)          = A(0)  \ Default = 60 seconds
Var_Alias Session Length (min)            = A(1)  \ Default = 60 minutes
Var_Alias SoftCR Data Array (Yes=1  No=0) = A(2)  \ Default = Yes

\ Constants for Array A()
^Acclim  = 0
^Session = 1
^SoftCR  = 2


\ List Data Variables Here
\  C() = IRT Array and Event Pen Code for Soft Cum. Recorder

\  D() = Array of Band 1 On/Off Times
\    D(0) = Time When Vocalization Went Above Band 1 Threshold
\    D(1) = Time When Vocalization Went Below Band 1 Threshold
\    D(2) = Time When Vocalization Went Above Band 1 Threshold
\    D(3) = Time When Vocalization Went Below Band 1 Threshold
\                                ...
\    D(998) = Time When Vocalization Went Above Band 1 Threshold
\    D(999) = Time When Vocalization Went Below Band 1 Threshold
\  E = Total Band 1 Vocalizations

\  F() = Array of Band 2 On/Off Times
\    F(0) = Time When Vocalization Went Above Band 2 Threshold
\    F(1) = Time When Vocalization Went Below Band 2 Threshold
\    F(2) = Time When Vocalization Went Above Band 2 Threshold
\    F(3) = Time When Vocalization Went Below Band 2 Threshold
\                                ...
\    F(998) = Time When Vocalization Went Above Band 2 Threshold
\    F(999) = Time When Vocalization Went Below Band 2 Threshold
\  G = Total Band 2 Vocalizations


\ List Working Variables Here
\  I = Subscript for the IRT Array C
\  J = Subscript for the Vocal Band 1 Array D
\  K = Subscript for the Vocal Band 2 Array E
\  S = Elapsed Time in Session
\  T = Elapsed Time in 0.01 sec Increments for SoftCR Data
\  Y = Counter for Vocal Band 1 Above Threshold
\  Z = Counter for Vocal Band 2 Above Threshold


DIM A = 2
DIM C = 10000
DIM D = 1000
DIM F = 1000


\ Z-Pulses Used in this Program
^StartRec  = 1   \ Z1  = Start Recording
^Vocal1On  = 2   \ Z2  = Signal Vocal 1 Above Threshold
^Vocal1Off = 3   \ Z3  = Signal Vocal 1 Below Threshold
^Vocal2On  = 4   \ Z4  = Signal Vocal 2 Above Threshold
^Vocal2Off = 5   \ Z5  = Signal Vocal 2 Below Threshold
^EndSess   = 32  \ Z32 = End of Session Signal


DISKCOLUMNS = 6


\***************************************************
\                 ANL-937 Schedule
\  S1 - Set Default Values
\          Acclimation Time  (60 seconds)
\          Session Length    (60 minutes)
\          SoftCR Activation (1-Yes)
\***************************************************
S.S.1,
S1,
  0.001": SET A(^Acclim) = 60, A(^Session) = 60, A(^SoftCR) = 1 ---> S2

S2,     \ First Statement: Wait for START signal.
        \
        \ Second Statement: Update screen display with default values
        \ for control variables.  This will show any changes made via
        \ the "Configure | Change Variables" Window prior to START.
  #START: CLEAR 1,60; SET A(^Acclim) = A(^Acclim) * 1" ---> S3
  1": SHOW 1,Acclim Time,A(^Acclim), 2,Session Length,A(^Session);
      SHOW 3,SoftCR Code,A(^SoftCR) ---> SX

S3,     \ Time Acclimation Period.
        \ Turn on Recording Output and Signal
        \ that Recording has Started.
  A(^Acclim)#T: SHOW 2,Total Band 1,E, 3,Total Band 2,G;
                ON ^StartRec; Z^StartRec ---> S4

S4,
  1': ---> SX


\**********************************************
\         RECORD RESPONSES FOR BAND 1
\**********************************************
S.S.3,
S1,     \ Wait for Acclimation Period to End.
  #Z^StartRec: ---> S2

S2,     \ Record the Absolute Time that the Vocal
        \ Band 1 went above its Threshold and the
        \ Total Number of Responses on Vocal Band 1.
  #Z^EndSess: ---> S4
  #Z^Vocal1On: SET D(J) = S, J = J + 1, D(J) = -987.987;
               ADD E; SHOW 2,Total Band 1,E ---> S3

S3,     \ Record the Absolute Time that the Vocal
        \ Band 1 went below its Threshold.
  #Z^EndSess: ---> S4
  #Z^Vocal1Off: SET D(J) = S, J = J + 1, D(J) = -987.987 ---> S2

S4,     \ Holding State at End of Session
  1': ---> SX


\**********************************************
\         RECORD RESPONSES FOR BAND 2
\**********************************************
S.S.5,
S1,     \ Wait for Acclimation Period to End.
  #Z^StartRec: ---> S2

S2,     \ Record the Absolute Time that the Vocal
        \ Band 2 went above its Threshold and the
        \ Total Number of Responses on Vocal Band 2.
  #Z^EndSess: ---> S4
  #Z^Vocal2On: SET F(K) = S, K = K + 1, F(K) = -987.987;
               ADD G; SHOW 3,Total Band 2,G ---> S3

S3,     \ Record the Absolute Time that the Vocal
        \ Band 2 went below its Threshold.
  #Z^EndSess: ---> S4
  #Z^Vocal2Off: SET F(K) = S, K = K + 1, F(K) = -987.987 ---> S2

S4,     \ Holding State at End of Session
  1': ---> SX


\*****************************************************************
\        VOCAL BAND 1 THRESHOLD - 20ms ABOVE, 20ms BELOW
\*****************************************************************
S.S.7,  \ Vocal Band 1 Threshold - 20ms Above, 20ms Below.
S1,     \ Inputs in Level Mode generate an Input "count" on each
        \ Interrupt.  With a 10ms system Resolution 2 counts
        \ will be reached in 20ms.  The Z^Vocal1On pulse is used
        \ to signal that it is above its Threshold.  The second
        \ statement resets the counter every 20 ms so that false
        \ readings less than 20ms will not constitute a response.
  #R^VocalBand1: ADD Y; IF Y >= 2 [@AboveThreshold, @FalseReading]
                           @Above: Z^Vocal1On; SET Y = 0 ---> S2
                           @False: ---> SX
  0.02": SET Y = 0 ---> S1

S2,     \ As long as the Vocal 1 level is above its Threshold
        \ the second statement causes a re-entry to this State.
        \ This resets the the internal 20ms Timer so it never
        \ times out.  When the level falls below the Threshold
        \ in Band 1 for 20ms the Timer times out and a
        \ Z^Vocal1Off pulse signals the release of the event.
  0.02": Z^Vocal1Off ---> S1
  #R^VocalBand1: ---> S2


\*****************************************************************
\        VOCAL BAND 2 THRESHOLD - 20ms ABOVE, 20ms BELOW
\*****************************************************************
S.S.9,  \ Vocal Band 2 Threshold - 20ms Above, 20ms Below.
S1,     \ Inputs in Level Mode generate an Input "count" on each
        \ Interrupt.  With a 10ms system Resolution 2 counts
        \ will be reached in 20ms.  The Z^Vocal2On pulse is used
        \ to signal that it is above its Threshold.  The second
        \ statement resets the counter every 20 ms so that false
        \ readings less than 20ms will not constitute a response.
  #R^VocalBand2: ADD Z; IF Z >= 2 [@AboveThreshold, @FalseReading]
                           @Above: Z^Vocal2On; SET Z = 0 ---> S2
                           @False: ---> SX
  0.02": SET Z = 0 ---> S1

S2,     \ As long as the Vocal 2 level is above its Threshold
        \ the second statement causes a re-entry to this State.
        \ This resets the the internal 20ms Timer so it never
        \ times out.  When the level falls below the Threshold
        \ in Band 2 for 20ms the Timer times out and a
        \ Z^Vocal2Off pulse signals the release of the event.
  0.02": Z^Vocal2Off ---> S1
  #R^VocalBand2: ---> S2


\**********************************************
\   INCREMENT TIME T FOR IRT AND EVENT ARRAY
\**********************************************
S.S.11,
S1,
  #START: IF A(^SoftCR) > 0 [] ---> S2

S2,
  0.01": ADD T ---> SX
  #Z32: ---> S1


\****************************************************************
\ ADD A STEP 0 ELEMENT TO ARRAY C FOR EACH VOCAL BAND 1 RESPONSE
\****************************************************************
S.S.13,
S1,
  #Z^StartRec: IF A(^SoftCR) > 0 [@ActivateSoftCR, @NoSoftCR]
                  @ActSoftCR: ---> S2
                  @NoSoftCR: ---> SX

S2,     \ Vocal 1 Response above its Threshold
  #Z^EndSess: ---> S1
  #Z^Vocal1On: SET C(I) = T + 0.10, T = 0; ADD I;
               IF I = 10000 [@True, @False]
                  @True: ---> S1
                  @False: SET C(I) = -987.987 ---> SX


\****************************************************************
\ ADD A STEP 1 ELEMENT TO ARRAY C FOR EACH VOCAL BAND 2 RESPONSE
\****************************************************************
S.S.15,
S1,
  #Z^StartRec: IF A(^SoftCR) > 0 [@ActivateSoftCR, @NoSoftCR]
                  @ActSoftCR: ---> S2
                  @NoSoftCR: ---> SX

S2,     \ Vocal 1 Response above its Threshold
  #Z^EndSess: ---> S1
  #Z^Vocal2On: SET C(I) = T + 0.11, T = 0; ADD I;
               IF I = 10000 [@True, @False]
                  @True: ---> S1
                  @False: SET C(I) = -987.987 ---> SX


\*************************************************************
\ RAISE THE EVENT 0 ELEMENT IN ARRAY C FOR THE LENGTH OF TIME
\         THAT VOCAL BAND 1 IS ABOVE ITS THRESHOLD
\*************************************************************
S.S.17,
S1,
  #Z^StartRec: IF A(^SoftCR) > 0 [@ActivateSoftCR, @NoSoftCR]
                  @ActSoftCR: ---> S2
                  @NoSoftCR: ---> SX

S2,     \ Raise the Event 0 Element
  #Z^EndSess: ---> S1
  #Z^Vocal1On: SET C(I) = T + 0.60, T = 0, I = I + 1;
               IF I >= 10000 [@True, @False]
                  @True: ---> S1
                  @False: SET C(I) = -987.987 ---> S3

S3,     \ Lower the Event 0 Element
  #Z^EndSess: ---> S1
  #Z^Vocal1Off: SET C(I) = T + 0.50, T = 0, I = I + 1;
                IF I >= 10000 [@True, @False]
                   @True: ---> S1
                   @False: SET C(I) = -987.987 ---> S2


\*************************************************************
\ RAISE THE EVENT 1 ELEMENT IN ARRAY C FOR THE LENGTH OF TIME
\         THAT VOCAL BAND 2 IS ABOVE ITS THRESHOLD
\*************************************************************
S.S.19,
S1,
  #Z^StartRec: IF A(^SoftCR) > 0 [@ActivateSoftCR, @NoSoftCR]
                  @ActSoftCR: ---> S2
                  @NoSoftCR: SET C(0) = -987.987 ---> SX  \ Seal Array

S2,     \ Raise the Event 1 Element
  #Z^EndSess: ---> S1
  #Z^Vocal2On: SET C(I) = T + 0.61, T = 0, I = I + 1;
               IF I >= 10000 [@True, @False]
                  @True: ---> S1
                  @False: SET C(I) = -987.987 ---> S3

S3,     \ Lower the Event 1 Element
  #Z^EndSess: ---> S1
  #Z^Vocal2Off: SET C(I) = T + 0.51, T = 0, I = I + 1;
                IF I >= 10000 [@True, @False]
                   @True: ---> S1
                   @False: SET C(I) = -987.987 ---> S2


\*********************************************
\                SESSION CLOCK
\*********************************************
S.S.21,
S1,
  #START: SHOW 1,Session,S ---> S2

S2,
  0.01": SET S = S + 0.01; SHOW 1,Session,S/60;
         IF S/60 >= A(^Session) [@EndSession, @ContinueTiming]
            @End: SET C(I) = T + 0.30, C(I+1) = 0.31;
                  SET I = I + 2, C(I) = -987.987;
                  OFF ^StartRec; Z^EndSess ---> S3
            @Cont: ---> SX

S3,     \ Wait for Screen Update and end with
        \ STOPABORTFLUSH for Automatic Data Saving
  2": ---> STOPABORTFLUSH
